--= Η κλάση Heap =--


[Ιδιωτικό μέρος]:
Περιέχει σαν ιδιωτικά μέλη τις μεταβλητές:

 1) *arr,
 2) CurrentSize,
 3) MaxSize 

 Αυτές αφορούν: 

 α) τον δυναμικό πίνακα(ο οποίος μετά θα μετατραπεί σε heap), 
 β) το τρέχων στοιχείο στο οποίο γίνεται προσπέλαση και 
 γ) το μέγιστο μέγεθος που μπορεί να έχει ο πίνακας αντίστοιχα.

[Δημόσιο μέρος]:
Περιέχει τις μεθόδους:

 1) Heap(int MaxSize) {Constructor method}
 2) float Insert(const float &x)
 3) void Initialize(string str)
 4) float SumHeap(int n,string str)
 5) void Display()
 6) ~Heap() {Destructor method}

 Αυτές υλοποιούν:

 α) Η συνάρτηση Heap δέχεται σαν παράμετρο τη μεταβλητή int n μέσω τις οποίας αρχικοποιεί τον πίνακα.
 β) Η μέθοδος Insert δέχεται σαν παράμετρο την μεταβλητή float x στην οποία αποθηκεύεται ένας τυχαίος αριθμός κινητής υποδιαστολής. 
 Έπειτα ελέγχει πρώτα αν υπάρχει υπερχείλιση(γρ 22-25) και σε περίπτωση που υπάρχει τυπώνει μήνυμα λάθους και επιστρέφει το -1. Αν δεν υπάρχει 
 κάποιο πρόβλημα συνεχίζει εισάγωντας το στοιχείο x στον πίνακα.
 γ) Η μέθοδος Initialize δέχεται σαν παράμετρο την μεταβλητή str η οποία καθορίζει το heap(Min/Max) στο οποίο θα μετατραπεί ο κάθε πίνακας 
 ανάλογα. Έστω τώρα ότι είμαστε στην περίπτωση min_heap (γρ. 36-38). Ο αλγόριθμος μετά ξεκινώντας επαναληπτικά από το πιο δεξί 
 υποδέντρο(συγκεκριμένα τον πιο δεξί γονέα) συγκρίνει το μεγαλύτερο από τα παιδία του και αν αυτο είναι μικρότερο σε τιμή απο τον γονέα τα 
 αντιμεταθέτει αλλιώς σπάει την εσωτερική επανάληψη while και προχωράει στα υπόλοιπα υποδέντρα μέχρι που ο τελικός πίνακας που προκύπτει
 να είναι σωρός ελαχίστων. Παρόμοιως για τον σωρό μεγίστων(γρ. 39-41).
 δ) Η μέθοδος SumHeap δέχεται σαν παραμέτρους τις μεταβλητές n και str η λειτουργία των οποίων εξηγήθηκε παραπάνω. Έστω ότι είμαστε στην 
 περίπτωση του min_heap. Αυτή η μέθοδος υλοποιεί δύο διαδικασίες ταυτόχρονα. Η πρώτη είναι η επαναληπτική (γρ. 52) διαγραφή του μικρότερου 
 στοιχείου του σωρού που πάντα θα βρίσκεται στην ρίζα του και η αναταξινόμηση του σωρού, ώστε να μην "χαλάσουν" οι ιδιότητές του μειώνωντας 
 κάθε φορά το CurrentSize κατά 1. Η δεύτερη αφορά την αρχικοποίηση του αθροίσματος float sum με 0 στο οποίο θα προστίθεται η τιμή της ρίζας 
 του σωρού πριν αυτή διαγραφτεί, προσθέτωντας κατα αυτόν το τροπο πάντα τα 2 μικρότερα στοιχεία του σωρού των ελαχίστων. Τέλος το άθροισμα 
 αυτό το επιστρέφει στο κυρίως πρόγραμμα για περεταίρω επεξεργασία. Παρόμοι η διαδικασία για τον max_heap.
 ε) Η μέθοδος Display χρησιμοποιείται γενικά για την εκτύπωση όλων των στοιχείων ενός heap στην οθόνη. Στο συγκεκριμένο παράδειγμα θα εκτυπώνει 
 μόνο το άθροισμα των στοιχείων του κάθε πίνακα.
 στ) Η μέθοδος ~Heap είναι η μέθοδος destructor που χρησιμοποιειται για τη διαγραφή του ανικειμένου και την απελευθέρωση μνήμης.


 --= Το κυρίως πρόγραμμα =--


  Στις γραμμές 94-96 καλείται η γεννήτρια τυχαίων αριθμών κινητής υποδιαστολής, οι οποίοι θα χρησιμοποιηθούν σαν είσοδος στους πίνακες 
heap_min και heap_max.

  Έπειτα ζητείται από τον χρήστη να εισάγει το πλήθος n των αριθμών το οποίο θέλει να γεννήσει. Γίνεται επαναληπτικός έλεγχος ώστε το n να 
έιναι θετικός φυσικός αριθμός.

  Στις γραμμές 105-106 δημιουργούνται τα δύο αντικείμενα πίνακες της κλάσης heap καλώντας τον constructor κάθε φορά για MaxSize=n.
  
  Για την εισαγωγή των αριθμών στους σωρούς χρησιμοποιείται η επανάληψη στις γραμμές 108-112. Συγκεκριμένα στην μεταβλητή r δινέται σε κάθε 
επανάληψη ένας τυχαίος αριθμός ο οποίος εισάγεται και στους δύο πίνακες πετυχαίνοντας έτσι την αντιγραφή των στοιχείων του min_heap στο max_heap.
  
  Στη συνέχεια στις γραμμές 114-123 αρχικοποιούνται οι πίνακες σε σωρούς καλώντας την μέθοδο Initialize, το άθροισμα των στοιχείων τους 
επιστρέφεται στις μεταβλητές minSum και maxSum και τέλος εφόσον οι σωροί μετά την διαγραφή όλων των στοιχείων τους είναι άδειοι εισάγωνται 
τα αθροίσματα αυτά μέσω της Insert σαν το μοναδικό στοιχείο του κάθε πίνακα/σωρού.
  
  Τέλος τα αθροίσματα εκτυπώνωνται στην οθόνη, μαζί με ένα ανάλογο μήνυμα(min>max/max>min/max=min), διαγράφονται τα αντικείμενα και το πρόγραμμα 
περιμένει κάποια εισαγωγή από το πληκτρολόγιο πριν τερματήσει(ώστε το .exe αρχείο να μην κλείσει αυτόματα.
